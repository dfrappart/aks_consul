#Pipeline name

name: 'dockerbuild_trips'


#Parameters for the pipeline

# CD Trigger

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - /containers_artifacts/src/trips/*

# Job Workers config

pool:
  vmImage: 'ubuntu-latest'

# Variables for the job

variables:
- group: ConsulLab
- group: ConsulLabKV

# Stages

stages:
  - stage: docker_trivy_scan
    jobs: 
    - job: trivy_install
      continueOnError: false
      # Job step
      steps:
      - script: |
         echo '######################################################'   
         echo 'Installing Trivy'
         echo '######################################################'
         echo
         sudo apt-get install wget apt-transport-https gnupg lsb-release
         wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
         echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
         sudo apt-get update
         sudo apt-get install trivy -y
         echo
         echo '######################################################'   
         echo 'Check Trivy install'
         echo '######################################################'        
         trivy -v
         echo
         echo '######################################################'   
         echo 'End Trivy Install'
         echo '######################################################' 

        workingDirectory: 'containers_artifacts/src/trips/'
        displayName: 'trivy_install'

      - script: |
         echo '######################################################'   
         echo 'Trivy scan'
         echo '######################################################'
         echo
         trivy config .
        workingDirectory: 'containers_artifacts/src/trips/'
        displayName: 'trivy_scan'


  - stage: dockerbuild_trips
    jobs: 
    - job: dockerbuild
      continueOnError: false
      # Job step
      steps:
      - script: |
         echo '######################################################'   
         echo 'building container'
         echo '######################################################'
         echo
         docker version
         echo
         echo '######################################################'   
         echo 'Start Build'
         echo '######################################################'        
         docker build --no-cache \
         --build-arg IMAGE_VERSION="1.0" \
         --build-arg IMAGE_CREATE_DATE="`date -u +"%Y-%m-%dT%H:%M:%SZ"`" \
         --build-arg IMAGE_SOURCE_REVISION="`git rev-parse HEAD`" \
         -f Dockerfile -t "tripinsights/trips:1.0" .
         echo
         echo '######################################################'   
         echo 'Listing Docker image'
         echo '######################################################' 
         docker image ls
         echo
         echo '######################################################'   
         echo 'End Build'
         echo '######################################################' 

        workingDirectory: 'containers_artifacts/src/trips/'
        displayName: 'dockerbuild'

      - script: |
         echo Login to Azure
         az login --service-principal -u ${appregid} -p ${appregsecret} --tenant ${tenantid}
         echo
         echo Listing subscriptions
         az account list -o table
         
        displayName: 'Login to Azure'
        env:
          appregid: $(TFId)
          appregsecret: $(TFSecret)
          tenantid: $(TenantId)

      - script: |
         echo '######################################################'   
         echo 'push image to registry'
         echo '######################################################'
         echo
         echo 'set the target subscription'
         az account set -s ${TargetSubscription}
         echo
         echo 'connect to registry'
         az acr login --name ${ACRName}         
         echo
         echo 'tag container image'
         docker tag tripinsights/trips:1.0 ${ACRName}.azurecr.io/tripinsights/trips:1.0
         echo
         echo 'push container image'         
         docker push ${ACRName}.azurecr.io/tripinsights/trips:1.0           
         
        displayName: 'Push to Azure registry'
        env:
          appregid: $(TFId)
          appregsecret: $(TFSecret)
          tenantid: $(TenantId)
          ACRName: $(ACRName)
          TargetSubscription: $(SubscriptionId)
